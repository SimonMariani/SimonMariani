# NOTE this is for local development only
server {
    listen 80;
    #server_name yourdomain.com;

    # Serve the static files
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }

    # Proxy API requests
    location /api/ {
        proxy_pass http://backend:8000/; # Adjust to your API's address and port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}


# # NOTE this is the production version
# server {

#     # port 443 allows for https protocol while port 80 does not
#     listen 443 ssl;

#     server_name simonmariani.com;
#     # client_max_body_size 8M;

#     # We also initialize a hsts protocol
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

#     # http location
#     location / {
#         root /usr/share/nginx/html;
#         try_files $uri $uri/ /index.html;
#     }

#     # Proxy API requests
#     location /api/ {
#         proxy_pass http://backend:8000/; # Adjust to your API's address and port
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     # Settings for ssl connection
#     ssl_certificate /etc/letsencrypt/live/simonmariani.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/simonmariani.com/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
# }


# # There is another server on port 80 that manages the http requests
# server {
	
#     # Port 80 does not allow https protocol so we only use it to redirect http requests
#     listen 80;
#     server_name simonmariani.com;

#     # For certbotm not sure if we need this
#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }
  
#     # If the host name is correct we redirect to the https server 
#     if ($host = simonmariani.com) {
#         return 301 https://$host$request_uri;
#     }

#     #location / {
#     #    return 301 https://simonmariani.com$request_uri;
#     #}

#     # 404 not found for unrecognized hosts so they get as little information as possible. A more informative
#     # return would be 444 no response as this does indicate its existance.
#     return 404;
# }
